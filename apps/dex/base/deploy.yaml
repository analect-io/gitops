apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dex
  name: dex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
    spec:
      serviceAccountName: dex # This is created below
      containers:
        - image: quay.io/dexidp/dex:v2.10.0
          name: dex
          command: ["/usr/local/bin/dex", "serve", "/etc/dex/cfg/config.yaml"]
          ports:
            - name: http
              containerPort: 5556
          volumeMounts:
            - name: config
              mountPath: /etc/dex/cfg
          env:
            - name: GITHUB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: github-client
                  key: client-id
            - name: GITHUB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: github-client
                  key: client-secret
      volumes:
        - name: config
          configMap:
            name: dex
            items:
              - key: config.yaml
                path: config.yaml
      # - name: tls
      #   secret:
      #     secretName: dex.example.com.tls
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: dex
data:
  config.yaml: |
    issuer: https://dex.diegoluisi.eti.br
    storage:
      type: kubernetes
      config:
        inCluster: true
    web:
      http: 0.0.0.0:5556
    logger:
      level: debug
      format: text
    connectors:
    - type: github
      id: github
      name: GitHub
      config:
        clientID: $GITHUB_CLIENT_ID
        clientSecret: $GITHUB_CLIENT_SECRET
        redirectURI: https://dex.diegoluisi.eti.br/callback
        orgs:
        - name: spantree
    oauth2:
      skipApprovalScreen: false

    staticClients:
    - id: example-app
      redirectURIs:
      - 'http://127.0.0.1:5555/callback'
      name: 'Example App'
      secret: ZXhhbXBsZS1hcHAtc2VjcmV0

---
apiVersion: v1
kind: Service
metadata:
  name: dex
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  selector:
    app: dex
  ports:
    - appProtocol: http
      name: http
      port: 5556
      protocol: TCP
      targetPort: http
    - appProtocol: http
      name: telemetry
      port: 5558
      protocol: TCP
      targetPort: telemetry
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: dex
  name: dex
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dex
  labels:
    app: dex
rules:
  - apiGroups: ["dex.coreos.com"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dex
  labels:
    app: dex
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: dex
subjects:
- kind: ServiceAccount
  namespace: dex
  name: dex

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
  labels:
    app: dex
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["list", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex-cluster
  labels:
    app: dex
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: dex
subjects:
- kind: ServiceAccount
  namespace: dex
  name: dex

