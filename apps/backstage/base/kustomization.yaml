apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: backstage
resources:
  - postgres-config.yaml
configurations:
  - https://argoproj.github.io/argo-rollouts/features/kustomize/rollout-transform.yaml
helmCharts:
- name: devxp-app
  releaseName: devxp-app
  version: 0.1.29
  repo: https://devxp-tech.github.io/helm-charts
  valuesInline:
    name: "backstage"
    image:
      repository: diegoluisi/backstage
      tag: c8e1e18e
    ResourceQuota:
      enabled: false
    port: 7007
    env:
    - name: ENV
      value: production
    - name: ENVIRONMENT
      value: production
    - name: BACKSTAGE_ENVIRONMENT
      value: production
    envFrom:
      - configMapRef:
          name: postgres-configs
      - secretRef:
          name: postgres-secrets
      - secretRef:
          name: backstage-secrets
    resources:
      requests:
        memory: 256Mi
        cpu: 50m
      limits:
        memory: 512Mi
        cpu: 100m
    probe:
      enabled: false
    service:
      port: 80
    # readinessProbe:
    #   initialDelaySeconds: 15
    #   periodSeconds: 10
    #   httpGet:
    #     port: http
    #     path: "/healthcheck"
    #     httpHeaders:
    #     - name: Host
    #       value: backstage.diegoluisi.eti.br
    # livenessProbe:
    #   initialDelaySeconds: 15
    #   periodSeconds: 10
    #   httpGet:
    #     port: http
    #     path: "/healthcheck"
    #     httpHeaders:
    #     - name: Host
    #       value: backstage.diegoluisi.eti.br

- name: postgresql
  releaseName: postgresql
  version: 12.1.4
  repo: https://charts.bitnami.com/bitnami
  valuesInline:
    primary:
      initdb:
          scripts:
            create_db.sql: |
              CREATE DATABASE backstage;
      resources:
        limits:
          cpu: 250m
          memory: 2048Mi
        requests:
          cpu: 50m
          memory: 512Mi

  #   name: "backstage"
  #   image:
  #     repository: diegoluisi/backstage
  #     tag: c8e1e18e