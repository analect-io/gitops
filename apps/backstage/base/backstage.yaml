apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage
  namespace: backstage
  labels:
    app: backstage
    version: 1.0.0
    backstage.io/kubernetes-id: backstage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backstage
  template:
    metadata:
      labels:
        app: backstage
        backstage.io/kubernetes-id: backstage
      annotations:
        sidecar.istio.io/proxyCPU: "50m"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPULimit: "100m"
        sidecar.istio.io/proxyMemoryLimit: "128Mi"
    spec:
      containers:
        - name: backstage
          image: diegoluisi/backstage:0.9
          imagePullPolicy: IfNotPresent
          ports:
          - name: http
            containerPort: 7007
          env:
          - name: ENV
            value: production
          - name: ENVIRONMENT
            value: production
          - name: BACKSTAGE_ENVIRONMENT
            value: production
          envFrom:
            - configMapRef:
                name: postgres-configs
            - secretRef:
                name: postgres-secrets
            - secretRef:
                name: backstage-secrets
            - secretRef:
                name: backstage-secrets
            - secretRef:
                name: backstage-secrets
          resources:
            requests:
              memory: 256Mi
              cpu: 50m
            limits:
              memory: 512Mi
              cpu: 100m
          # readinessProbe:
          #   httpGet:
          #     port: 7007
          #     path: /healthcheck
          # livenessProbe:
          #   httpGet:
          #     port: 7007
          #     path: /healthcheck