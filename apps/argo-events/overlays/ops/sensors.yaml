apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: webhook
spec:
  template:
    serviceAccountName: argo-events-sa
  dependencies:
  - name: github
    eventSourceName: github
    eventName: combined-app
  triggers:
  - template:
      name: trigger
      argoWorkflow:
        group: argoproj.io
        version: v1alpha1
        resource: workflows
        operation: submit
        source:
          resource:
            apiVersion: argoproj.io/v1alpha1
            kind: Workflow
            metadata:
              generateName: combined-app-
              namespace: workflows
            spec:
              entrypoint: check-branch
              serviceAccountName: workflow
              volumes:
              - name: regcred
                secret:
                  secretName: regcred
                  items:
                    - key: .dockerconfigjson
                      path: config.json
              - name: github-access
                secret:
                  secretName: github-access
                  items:
                    - key: token
                      path: token
                    - key: user
                      path: user
                    - key: email
                      path: email
              - name: slack-access
                secret:
                  secretName: slack-access
              templates:
              - name: build
                dag:
                  tasks:
                  - name: build-step
                    templateRef:
                      name: container-image
                      template: build-kaniko-git
                      clusterScope: true
                    arguments:
                      parameters:
                      - name: repo_url
                        value: ""
                      - name: repo_ref
                        value: ""
                      - name: repo_commit_id
                        value: ""
                      - name: container_image
                        value: analect-io/
                      - name: container_tag
                        value: ""
                  - name: promote-staging
                    templateRef:
                      name: promote
                      template: promote
                      clusterScope: true
                    arguments:
                      parameters:
                      - name: environment
                        value: "staging"
                      - name: repo_commit_id
                        value: ""
                      - name: repo_full_name
                        value: ""
                    dependencies:
                    - build-step
                  - name: promote-production
                    templateRef:
                      name: promote
                      template: promote
                      clusterScope: true
                    arguments:
                      parameters:
                      - name: environment
                        value: "production"
                      - name: repo_commit_id
                        value: ""
                      - name: repo_full_name
                        value: ""
                    dependencies:
                    - test-functional
                    - test-integration
                  - name: test-functional
                    template: test
                    dependencies:
                    - promote-staging
                  - name: test-integration
                    template: test
                    dependencies:
                    - promote-staging
                  - name: build-notification
                    templateRef:
                      name: custom-json
                      template: custom-json
                      clusterScope: true
                    arguments:
                      parameters:
                      - name: stage
                        value: build
                      - name: author
                        value: ""
                    dependencies:
                    - build-step
                  - name: push-notification
                    templateRef:
                      name: custom-json
                      template: custom-json
                      clusterScope: true
                    arguments:
                      parameters:
                      - name: stage
                        value: push
                      - name: author
                        value: ""
                  - name: deployment-notification
                    templateRef:
                      name: custom-json
                      template: custom-json
                      clusterScope: true
                    arguments:
                      parameters:
                      - name: stage
                        value: deployment
                      - name: author
                        value: ""
                    dependencies:
                    - promote-production
              - name: test
                script:
                  image: alpine
                  command: [sh]
                  source: |
                    echo This is a testing simulation...
                    sleep 5
                  volumeMounts:
                  - name: github-access
                    mountPath: /.github/
              - name: check-branch
                steps:
                - - name: step-py-check-condition
                    template: py-check-condition
                    arguments:
                      parameters:
                      - name: ref
                        value: placeholder
                - - name: step-build-dag-if-true
                    template: build
                    when: "{{steps.step-py-check-condition.outputs.result}}"
              - name: py-check-condition
                inputs:
                  parameters:
                  - name: ref
                script:
                  image: python:alpine3.9
                  command: [python]
                  source: |
                    ref = "{{inputs.parameters.ref}}"
                    condition = ref == "refs/heads/main"
                    print(str(condition).lower())

        parameters:
        # build-step
        - src:
            dependencyName: github
            dataKey: body.repository.git_url
          dest: spec.templates.0.dag.tasks.0.arguments.parameters.0.value
        - src:
            dependencyName: github
            dataKey: body.ref
          dest: spec.templates.0.dag.tasks.0.arguments.parameters.1.value
        - src:
            dependencyName: github
            dataKey: body.after
          dest: spec.templates.0.dag.tasks.0.arguments.parameters.2.value
        - src:
            dependencyName: github
            dataKey: body.repository.name
          dest: spec.templates.0.dag.tasks.0.arguments.parameters.3.value
          operation: append
        - src:
            dependencyName: github
            dataKey: body.after
          dest: spec.templates.0.dag.tasks.0.arguments.parameters.4.value

        # promote-staging
        - src:
            dependencyName: github
            dataKey: body.after
          dest: spec.templates.0.dag.tasks.1.arguments.parameters.1.value
        - src:
            dependencyName: github
            dataKey: body.repository.full_name
          dest: spec.templates.0.dag.tasks.1.arguments.parameters.2.value

        # promote-production
        - src:
            dependencyName: github
            dataKey: body.after
          dest: spec.templates.0.dag.tasks.2.arguments.parameters.1.value
        - src:
            dependencyName: github
            dataKey: body.repository.full_name
          dest: spec.templates.0.dag.tasks.2.arguments.parameters.2.value

        # py-check-condition
        - src:
            dependencyName: github
            dataKey: body.ref
          dest: spec.templates.2.steps.0.0.arguments.parameters.0.value

        # slack messages
        - src:
            dependencyName: github
            dataKey: body.repository.owner.name
          dest: spec.templates.0.dag.tasks.5.arguments.parameters.1.value
        - src:
            dependencyName: github
            dataKey: body.repository.owner.name
          dest: spec.templates.0.dag.tasks.6.arguments.parameters.1.value
        - src:
            dependencyName: github
            dataKey: body.repository.owner.name
          dest: spec.templates.0.dag.tasks.7.arguments.parameters.1.value