---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: sonar
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
      annotations:
        sidecar.istio.io/proxyCPU: "100m"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPULimit: "200m"
        sidecar.istio.io/proxyMemoryLimit: "128Mi"
    spec:
      securityContext:
        fsGroup: 2000
      initContainers:
      - name: app-data-permission-fix
        image: busybox
        command: ["/bin/chown","-R","1001:1001","/bitnami/postgresql"]
        resources:
          requests:
            memory: 128Mi
            cpu: 50m
          limits:
            memory: 256Mi
            cpu: 100m
        volumeMounts:
        - name: postgres
          mountPath: /bitnami/postgresql
        securityContext:
          # runAsGroup: 1001
          # runAsNonRoot: false
          runAsUser: 0
      containers:
      - name: postgress
        image: bitnami/postgresql
        imagePullPolicy: IfNotPresent
        ports:
        - name: tcp-postgres
          containerPort: 5432
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        envFrom:
        - configMapRef:
            name: postgres
        volumeMounts:
        - name: postgres
          mountPath: /bitnami/postgresql
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 256Mi
            cpu: 500m
      volumes:
      - name: postgres
        persistentVolumeClaim:
          claimName: sonar-postgres-pvc