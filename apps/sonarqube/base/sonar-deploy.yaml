---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonar
  namespace: sonar
  labels:
    app: sonar
    version: 9.5.0
    backstage.io/kubernetes-id: sonar
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sonar
  template:
    metadata:
      labels:
        app: sonar
      annotations:
        sidecar.istio.io/proxyCPU: "50m"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPULimit: "100m"
        sidecar.istio.io/proxyMemoryLimit: "128Mi"
    spec:
      initContainers:
      - name: init
        image: busybox
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        resources:
          requests:
            memory: 64Mi
            cpu: 50m
          limits:
            memory: 128Mi
            cpu: 100m
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
      containers:
      - name: sonarqube
        image: sonarqube:9.5.0-community
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
        env:
          - name: SONAR_CE_JAVAOPTS
            value: "-Xmx1024m -Xms1024m"
          - name: JAVA_OPTS
            value: "-Duser.timezone=America/Sao_Paulo -Xmx1024m"
        envFrom:
        # - configMapRef:
        #     name: sonar-config
        - secretRef:
            name: postgres-secrets
        volumeMounts:
        - name: app-pvc
          mountPath: "/opt/sonarqube/data/"
          subPath: data
        - name: app-pvc
          mountPath: "/opt/sonarqube/extensions/"
          subPath: extensions
        resources:
          requests:
            memory: 1024Mi
            cpu: 50m
          limits:
            memory: 2048Mi
            cpu: 100m
      volumes:
      - name: app-pvc
        persistentVolumeClaim:
          claimName: sonar-pvc